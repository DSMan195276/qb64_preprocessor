
DIM SHARED MEM_FAKEMEM AS _MEM

DECLARE CUSTOMTYPE LIBRARY
  FUNCTION MEM_MALLOC%& alias malloc (BYVAL bytes as LONG)
  FUNCTION MEM_REALLOC%& ALIAS realloc (BYVAL src as _UNSIGNED _OFFSET, BYVAL size as _UNSIGNED LONG)
  SUB MEM_FREE ALIAS free (BYVAL off as _OFFSET)
  SUB MEM_MEMCPY ALIAS memcpy (BYVAL dest as _OFFSET, BYVAL src as _OFFSET, BYVAL bytes as LONG)
  SUB MEM_MEMSET ALIAS memset (BYVAL dest as _OFFSET, BYVAL value as LONG, BYVAL bytes as LONG)
  SUB MEM_MEMMOVE ALIAS memmove (BYVAL dest as _OFFSET, BYVAL src AS _OFFSET, BYVAL bytes AS LONG)
END DECLARE

DIM SHARED MEM_SIZEOF_OFFSET, MEM_SIZEOF_MEM_STRING, MEM_SIZEOF_MEM_ARRAY

'CONST MEM_SIZEOF_OFFSET = 4
if instr(_OS$, "[32BIT]") then
  MEM_SIZEOF_OFFSET = 4
else
  MEM_SIZEOF_OFFSET = 8
end if

MEM_SIZEOF_MEM_STRING = MEM_SIZEOF_OFFSET + 4 + 4 + 1
TYPE MEM_String
  mem as _OFFSET
  length AS LONG
  allocated AS LONG
  is_allocated AS _BYTE
END TYPE

MEM_SIZEOF_MEM_ARRAY = MEM_SIZEOF_OFFSET + 4 + 4 + 1 + 2 + 4
TYPE MEM_Array
  mem AS _OFFSET
  length AS LONG
  allocated AS _UNSIGNED LONG
  is_allocated AS _BYTE
  element_size AS INTEGER
  last_element AS LONG
END TYPE

